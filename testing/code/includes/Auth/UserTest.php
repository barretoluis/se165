<?php
require_once __DIR__ . '\..\..\..\..\code\includes\Auth\User.class.php';
require_once __DIR__ . '\..\..\..\..\code\includes\Database.php';
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-11-09 at 02:34:59.
 */
class UserTest extends PHPUnit_Framework_TestCase {

    /**
     * @var User
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new User;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * Generated from @assert ('password') != 'password'.
     *
     * @covers User::encyptPwd
     */
    public function testEncyptPwd() {
        $this->assertNotEquals(
                'password'
                , $this->object->encyptPwd('password')
        );
    }

    /**
     * Generated from @assert ('tack', '3e818eec51b45583b9881f5f2fe455413483848ab61ba10a0c4914d5cfb24a155dfc70b707b948c1ae7ce175b7ee6f0d54487d07fcc147f813e0283346bb023c') == TRUE.
     *
     * @covers User::checkPassword
     */
    public function testCheckPassword() {
        $this->assertEquals(
                TRUE
                , $this->object->checkPassword('tack', '3e818eec51b45583b9881f5f2fe455413483848ab61ba10a0c4914d5cfb24a155dfc70b707b948c1ae7ce175b7ee6f0d54487d07fcc147f813e0283346bb023c')
        );
    }

    /**
     * Generated from @assert ('tack', '129dkjsf0') == FALSE.
     *
     * @covers User::checkPassword
     */
    public function testCheckPassword2() {
        $this->assertEquals(
                FALSE
                , $this->object->checkPassword('tack', '129dkjsf0')
        );
    }

    /**
     * Generated from @assert ('tack@tackster.com', 'param2') != Exception.
     *
     * @covers User::sendResteEmail
     */
    public function testSendResteEmail() {
        $this->assertNotEquals(
                Exception
                , $this->object->sendResteEmail('tack@tackster.com', 'param2')
        );
    }

    /**
     * Generated from @assert ('tack@tackster.com') == TRUE.
     *
     * @covers User::searchUser
     */
    public function testSearchUser() {
        $this->assertEquals(
                TRUE
                , $this->object->searchUser('tack@tackster.com')
        );
    }

    /**
     * Generated from @assert ('notauser@random.org') == FALSE;.
     *
     * @covers User::searchUser
     */
    public function testSearchUser2() {
        $this->assertEquals(
        FALSE
        ,
        $this->object->searchUser('notauser@random.org')
        );
    }

    /**
     * Generated from @assert () == TRUE.
     *
     * @covers User::logOutUser
     */
    public function testLogOutUser() {
        $this->assertEquals(
                TRUE
                , $this->object->logOutUser()
        );
    }

    /**
     * @covers User::createUser
     * @todo   Implement testCreateUser().
     */
    public function testCreateUser() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers User::updateUser
     * @todo   Implement testUpdateUser().
     */
    public function testUpdateUser() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers User::sendConfEmail
     * @todo   Implement testSendConfEmail().
     */
    public function testSendConfEmail() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers User::deleteUser
     * @todo   Implement testDeleteUser().
     */
    public function testDeleteUser() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers User::loadUser
     * @todo   Implement testLoadUser().
     */
    public function testLoadUser() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers User::logInUser
     * @todo   Implement testLogInUser().
     */
    public function testLogInUser() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers User::resetPassword
     * @todo   Implement testResetPassword().
     */
    public function testResetPassword() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

}
