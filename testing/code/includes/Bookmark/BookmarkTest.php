<?php
require_once __DIR__ . '\..\..\..\..\code\includes\Database.php';
require_once __DIR__ . '\..\..\..\..\code\includes\Utility\MyException.class.php';
require_once __DIR__ . '\..\..\..\..\code\includes\Bookmark\Bookmark.class.php';
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-11-13 at 00:51:34.
 */
class BookmarkTest extends PHPUnit_Framework_TestCase {

    /**
     * @var Bookmark
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Bookmark;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * Generated from @assert (73, 13) == TRUE.
     *
     * @covers Bookmark::canViewBmk
     */
    public function testCanViewBmk1() {
        $this->assertEquals(
                TRUE
                , $this->object->canViewBmk(73, 13)
        );
    }
    /**
     * @assert (72, 13) == FALSE
     * @covers Bookmark::canViewBmk
     */

    public function testCanViewBmk2()
    {
        $this->assertNotEquals(
                FALSE, 
                $this->object->canViewBmk(72, 13)
                );
    }
    /**
     * @covers Bookmark::createBookmark
     * @todo   Implement testCreateBookmark().
     */
    public function testCreateBookmark() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Bookmark::returnBookmark
     * @todo   Implement testReturnBookmark().
     */

    public function testReturnBookmark1() {
        $dataarray = $this->object->returnBookmark(13);
        $dataarray = $dataarray[0];
        
        $this->assertEquals(
                    $dataarray{"uc_id"}, 73
        );
        $dataarray = $this->object->returnBookmark(1);
           
        $this->assertEmpty(
                    $dataarray
                );
    }
    public function testReturnBookmark2()
    {
        $dataarray = $this->object->returnBookmark(13);
        $dataarray = $dataarray[0];
        
        $this->assertEquals(
                    $dataarray{"t_id"}, 24
        );
       
    }
    
    /**
     * @covers Bookmark::returnBmkDataByTrack
     * @todo   Implement testReturnBmkDataByTrack().
     */
    public function testReturnBmkDataByTrack() {
        $arraydata = $this->object->returnBmkDataByTrack(24);
        $arraydata = $arraydata[0];
        $this->assertNotEquals(
                $arraydata{"id"} , 12
        );
    }

    /**
     * @covers Bookmark::returnBmkComments
     * @todo   Implement testReturnBmkComments().
     */
    public function testReturnBmkComments() {
        $arraydata = $this->object->returnBmkComments(3);
        $arraydata1 = $arraydata[0];
        $arraydata2 = $arraydata[1];
        $this->assertEquals(
                $arraydata4{'uc_id'}, 73
        );
        $this->assertNotEquals(
                $arraydata3{'uc_id'}, 73
        );
                
    }

}
